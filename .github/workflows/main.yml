name: CI devops 2023
on:
  #to begin you want to launch this job in main and develop
  push:
    branches: ["master"]
  pull_request:

jobs:
  test-backend:
    runs-on: ubuntu-22.04
    steps:
      #checkout your GitHub code using actions/checkout@v2.5.0
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          cache: 'maven'
          distribution: 'temurin'
          java-version: '17'
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=devops-spitii_devops-pipeline --file Backend_2.0/pom.xml

  build-and-push-backend-image:
    needs: test-backend
    # run only when code is compiling and tests are passing
    runs-on: ubuntu-latest

    # steps to perform in job
    steps:
      - name: Checkout code
        uses: actions/checkout@v2.5.0

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image and push backend
        uses: docker/build-push-action@v5
        with:
          # relative path to the place where source code with Dockerfile is located
          context: ./Backend_2.0
          # Note: tags has to be all lower-case
          tags:  ${{secrets.DOCKERHUB_USERNAME}}/devops-backend:latest
          # build on feature branches, push only on master branch
          push: ${{ github.ref == 'refs/heads/master' }}
          # build on all platforms
          platforms: linux/amd64,linux/arm64/v8,linux/s390x,linux/ppc64le
  build-and-push-database-image:
    needs: test-backend
    # run only when code is compiling and tests are passing
    runs-on: ubuntu-latest

    # steps to perform in job
    steps:
      - name: Checkout code
        uses: actions/checkout@v2.5.0

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image and push database
        uses: docker/build-push-action@v5
        with:
          # relative path to the place where source code with Dockerfile is located
          context: ./Postgre
          # Note: tags has to be all lower-case
          tags:  ${{secrets.DOCKERHUB_USERNAME}}/devops-database:latest
          # build on feature branches, push only on master branch
          push: ${{ github.ref == 'refs/heads/master' }}
          # build on all platforms
          platforms: linux/amd64,linux/arm64/v8,linux/s390x,linux/ppc64le

  build-and-push-httpd-image:
    needs: test-backend
    # run only when code is compiling and tests are passing
    runs-on: ubuntu-latest

    # steps to perform in job
    steps:
      - name: Checkout code
        uses: actions/checkout@v2.5.0

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image and push httpd
        uses: docker/build-push-action@v5
        with:
          # relative path to the place where source code with Dockerfile is located
          context: ./httpd
          # Note: tags has to be all lower-case
          tags:  ${{secrets.DOCKERHUB_USERNAME}}/devops-httpd:latest
          # build on feature branches, push only on master branch
          push: ${{ github.ref == 'refs/heads/master' }}
          # build on all platforms
          platforms: linux/amd64,linux/arm64,linux/s390x,linux/ppc64le